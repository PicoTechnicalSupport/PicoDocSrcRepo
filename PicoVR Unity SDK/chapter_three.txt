.. _3 	Quick Start of SDK Access:

3 	Quick Start of SDK Access
======================================

Use the following steps to create a new project in Unity using the SDK:

1.	Open Unity, create a new project as shown below:

.. image:: _static/4.1.PNG

Figure 3.1 Creating a New Project.

2.	Create objects: ``cube1``, ``cube2``, ``cube3``, and configure their transforms as follows:

Table 1 - Cube Transforms

+------------+------------+----------------------+
| Cube1                                          |
+------------+------------------+----------------+
|            | Position (x,y,z) | 0, 2.38, 6.51  |
+------------+------------------+----------------+
|            | Rotation (x,y,z) | 0, 0, 0        |
+------------+------------------+----------------+
|            | Scale (x,y,z)    | 1, 1, 1        |
+------------+------------------+----------------+
| Cube2                                          |
+------------+------------------+----------------+
|            | Position (x,y,z) | -2, 0, 5       |
+------------+------------------+----------------+
|            | Rotation (x,y,z) | 0, 0, 0        |
+------------+------------------+----------------+
|            | Scale (x,y,z)    | 1, 1, 1        |
+------------+------------------+----------------+
| Cube3                                          |
+------------+------------------+----------------+
|            | Position (x,y,z) | 2, 0, 5        |
+------------+------------------+----------------+
|            | Rotation (x,y,z) | 0, 0, 0        |
+------------+------------------+----------------+
|            | Scale (x,y,z)    | 1, 1, 1        |
+------------+------------------+----------------+

3.	Navigate to **Assets** > **Import Package** > **Custom Package…**:

.. image:: _static/4.5.png

Figure 3.2 Importing a custom package.

4.	Select PicoVR_Unity_SDK-<versionnumber>.unitypackage and click Open:

.. image:: _static/4.6.png

Figure 3.3 Selecting a Unity package.

5.	Import the corresponding elements according to your needs:

.. image:: _static/4.7.png

Figure 3.4 Import options

6.	Navigate to the **Project** tab, expand **Assets** > **Pvr_UnitySDK** > **Prefabs**.

7.	Drag the **Pvr_UnitySDK** prefab into the scene and set the position and rotation of its transform component to (0, 0, 0):

.. image:: _static/4.8.png

Figure 3.5 Directory for Pvr_UnitySDK prefab

The hierarchy of the scene should look as follows with the Unity prefab: 

.. image:: _static/4.9.png

Figure 3.6 Scene hierarchy

8.	Delete **Main Camera** from the hierarchy. This prevents other cameras in the scene from interfering with the stereo rendering of the SDK.

9.	Click on the **Run** button. This displays output in the **Game** window similar to the following: 

.. image:: _static/4.10.png

Figure 3.7 Running the simulation

10.	Press and hold **Alt** and then move the mouse. The screen will follow your mouse to rotate up, down, left, and right. Press and hold **Alt** and click the left mouse button to select **VR** mode or **Mono** mode (Unity Editor only).

11.	Navigate to the Inspector panel of Pvr_UnitySDK and set the tracking type for the head and hand according to your current platform: 

	a.	If the head is 6DoF, set the Head Pose to Six DoF. 

	b.	If the hand is 6DoF, set the Hand Pose to Six DoF.

.. image:: _static/4.11.png

Figure 3.8 Adapting Target Platform

12.	Save your current scene before packaging.

13.	Navigate to **File** > **Build Settings…**.

14.	Click **Add Current** to add the current scene to the build list. 

15.	Select **Android** in the **Platform** field. 

16.	Click **Switch Platform** and **Build** to build the package.

**Note**: Pico Viewer does not support controllers and/or 6DoF.

.. image:: _static/4.12.png

Figure 3.9 Packaging
