.. _5 	Hardware product development guide :

5 	Hardware product development guide 
=========================================

This chapter will introduce the use method of SDK on Pico hardware products, and the developers should only choose to view the corresponding contents according to demands. 

5.1	Pico Goblin/G2/G2 4K
-----------------------------

5.1.1 	User manual 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

When using the Pico Goblin controller, please follow the following steps: 

1、Add the MotionController component to the default Pawn class in the game to make it have the same level as the Camera component: 

.. image:: _static/5.1.png

Figure 5.1 Adding a MotionController component

Note: This component is not affected by the Hand property. For example, if you change the left and right hands, navigate to the system settings to modify it. 

2. Enable Disable Low Latency Update, so the controller model won’t twinkle as a result of the dual updates per frame:

.. image:: _static/5.2.png

Figure 5.2 Disable Low Latency Update checking 

After packaging and installation, the component will follow the position and orientation movements of the Pico Goblin controller.

3、Add a model to MotionController: 

	1. For UE 4.20 and higher:

		* Add the model under the Visualization sub-menu of the MotionController details panel and enable Show Plugin Content:


		.. image:: _static/5.1.6.png

		Figure 5.3 UAE 4.20+ Pico Goblin controller model.

Note: In the plugin directory, the handle with button animation is packaged into an Actor. If you want to reuse it, attach it to the Pawn or Character in your level.

5.1.2 	Input instructions 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

1. Key instructions
"""""""""""""""""""""""""""

The keys used by the Goblin series controller are not predefined by the engine, and when developing, please set the input binding according to the following table or drive the event through the corresponding blueprint node:

==============================================    ==============================================    ==============================================
Goblin controller key                              Input binding                                    Blueprint node
==============================================    ==============================================    ==============================================
.. image:: _static/5.1.1.png                      .. image:: _static/5.2.1.png                      .. image:: _static/5.3.1.png 
.. image:: _static/5.1.2.png                      .. image:: _static/5.2.2.png                      .. image:: _static/5.3.2.png 
.. image:: _static/5.1.3.png                      .. image:: _static/5.2.3.png                      .. image:: _static/5.3.3.png 
.. image:: _static/5.1.4.png                      .. image:: _static/5.2.4.png                      .. image:: _static/5.3.4.png 
.. image:: _static/5.1.5.png                      .. image:: _static/5.2.5.png                      .. image:: _static/5.3.5.png                 
==============================================    ==============================================    ==============================================

Pico G2 Input Bindings. All elements are the same as the Pico Goblin controller except for the following two items:

==============================================    ==============================================    ==============================================
G2 controller key                                 Input binding                                      Blueprint node
==============================================    ==============================================    ==============================================
.. image:: _static/5.4.1.png                      .. image:: _static/5.4.2.png                      .. image:: _static/5.4.3.png 
.. image:: _static/5.4.4.png                      .. image:: _static/5.4.5.png                      .. image:: _static/5.4.6.png                
==============================================    ==============================================    ==============================================

2. 	Axes
"""""""""""""""""""""""""""

The axis input of the Goblin series controller only contains the touchpad, and the schematic diagram of the touchpad is as follows:

.. image:: _static/5.6.png

Figure 5.6 Goblin controller touchpad axes.

Note: The value of the X and Y axes range from 0 to 1. This differs from the touchpad axes of Steam, Oculus, and Google devices. If there are functions related to the touchpad axes in your project, map the values that range from -1 through 1 to 0 through 1.

Use the nodes below to get the axes values:

.. image:: _static/5.7.png

Figure 5.7 Nodes to get the touchpad axes values.

5.1.3 	Related blueprint nodes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

For the Goblin controller, we also provide the following blueprint interfaces:

.. image:: _static/5.7.1.png

.. image:: _static/5.7.2.png

.. image:: _static/5.7.3.png

.. image:: _static/5.7.4.png

.. image:: _static/5.7.5.png

.. image:: _static/5.7.6.png

5.2 	Pico Neo controller
-----------------------------

5.2.1 	User manual
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The Pico Neo controller is as shown below:

.. image:: _static/5.8.png

Figure 5.8 Pico Neo controller

The Pico Neo controller consists of the main controller and a sub controller. The main controller has a ray and can interact with the user interface. When there is only one controller connected to the HMD, it is the main controller.

It’s recommended that you add a WidgetInteraction component on the main controller, to ensure that the same controller is always used to interact with the user interface, both in the system and in your own application.

Use the following steps to set up the Pico Neo Controller:

1、Add two MotionController components to the default Pawn class in the game (named as MotionController_Main, MotionController_Sub), and make them the same level as the Camera component:

.. image:: _static/5.9.png

Figure 5.9  MotionController component addition 

2、Rename the MotionController components to MotionController_Main and MotionController_Sub.

3. Select MotionController_Main and set the value of Hand to Special 1 in its property panel. This enables the component to follow the main handle movement. 

4. Select MotionController_Sub and set the value of Hand to Special 2:

.. image:: _static/5.10.png

Figure 5.10 Setting the hand property.

5.	Add a model to the MotionController:
	1.	For UE 4.20 and higher: 

		* Add the model under the Visualization sub-menu of the MotionController details panel and enable Show Plugin Content:

		.. image:: _static/5.2.6.png

		Figure 5.11 Adding a Controller model in UE 4.20+.

When using the Pico Neo 2 controller, perform the following steps:

1.	Add two MotionController components to the default Pawn class in the game (named as MotionController_Left,and MotionController_Right), and make them the same level as the Camera component:

	.. image:: _static/5.2.7.png

	Figure 27 - Addition of the MotionController Component.

2.	Select MotionController_Left, find the Hand property in its detail panel, and modify it to Left:

	.. image:: _static/5.2.8.png

	Figure 28 - Hand Property Setting.

3.	Similarly, for MotionController_Right, its Hand property should be set as Right.

4.	Add a model to MotionController:

	1.	For UE 4.20 and higher: 

		* Add the model under the Visualization sub-menu of the MotionController details panel and enable Show Plugin Content:

		.. image:: _static/5.2.9.png

		Figure 29 - Controller Model Addition in UE4.20+.

Note: In the plug-in directory, we will package the controller with the key animation into an Actor. If you want to reuse it, attach it to the Pawn or Character in your level.

5.2.2 	Input instructions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

1. 	Keys
"""""""""""""""""""""""""""

The keys used by the Neo controller are not predefined by the engine, and when developing, please set the input binding according to the following table or drive the event through the corresponding blueprint node:

.. image:: _static/5.13.1.png

.. image:: _static/5.13.2.png

.. image:: _static/5.13.3.png

.. image:: _static/5.13.4.png

.. image:: _static/5.13.5.png

Neo 2 needs to drive the events through the corresponding blueprint node as follows:

.. image:: _static/5.4.7.png

2. 	Axes
"""""""""""""""""""""""""""

The axis input of the Pico Neo controller is divided into a touchpad and a trigger, and the schematic diagram of the touchpad is as follows:

.. image:: _static/5.14.png

Figure 5.14 Schematic diagram of Pico Neo controller touchpad

The values of the main and auxiliary handle touchpads can be Get through the following blueprint nodes:

.. image:: _static/5.15.png

Figure 5.15 Touchpad-related blueprint nodes

The value of the trigger ranges from 0 to 1 and the trigger input values of the main and auxiliary (left and right) controllers can be obtained through the following blueprint nodes:

.. image:: _static/5.16.png

Figure 5.16 Trigger-related blueprint nodes

5.2.3 	Related blueprint nodes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

For the Pico Neo controller, we provide several APIs in the form of blueprint nodes, and in case of right click on the event graph and expanding Pico Neo->Controller, these APIs can be seen:

.. image:: _static/5.17.png

5.17 API of Pico Neo controller

The detailed use methods of these APIs are as follows:

.. image:: _static/5.17.1.png

.. image:: _static/5.17.2.png

.. image:: _static/5.17.3.png

.. image:: _static/5.17.4.png

.. image:: _static/5.17.5.png

.. image:: _static/5.17.6.png

.. image:: _static/5.17.7.png

.. image:: _static/5.17.8.png

5.2.4 	Security zone of Pico Neo
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The Pico Neo security zone is similar to the Oculus Rift Guardian System and the SteamVR Chaperone System, which can you a prompt when the player is out of a certain range to avoid risks due to collisions with room walls. Although the all-in-one VR headset is limited by internal and external tracking and there are no coordinates of security zone transmitted by externally set sensor to the reality, we still recommend that the developer should set a hypothetical security range to ensure the user's security.

To this end, we provide an Actor Blueprint class as a security zone, which is essentially a normal-inward cylinder that remind the user of the pre-defined security range:

.. image:: _static/5.18.png

Figure 5.18 Security zone 

It is recommended that the following nodes should be added additionally in order to add the security zone after the BeginPlay event of the DefaultPawn for the game level:

.. image:: _static/5.19.png

Figure 5.19 Security zone addition 

Then, the display and hiding of the security zone will be changed dynamically according to the relative position of the Camera or MotionController and the parent component.

In addition, the Actor_SafeArea blueprint class also provides two methods for getting and setting the radius of the security zone:

.. image:: _static/5.20.png

Figure 5.20 Correlation functions of security zone

It is recommended that the developer should develop the function of the security zone setting to the user, and make the user set the radius of the security zone in the game according to the actual size of the open area under the environment where the user is located.

5.2.5 	Activate the Pico Neo 6Dof function
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The default project type of the SDK is head 3Dof tracking and hand 3Dof tracking. For devices with 6Dof, such as Pico Neo, if 6Dof needs to be enabled, please execute the following operations:

Open the menu Edit->Project Settings..., find the Plugins sub-item, and check the options under Pico Neo as needed:

.. image:: _static/5.21.png

Figure 5.21 Pico Neo 6 Dof options 

5.3 	Pico all-in-one key
----------------------------

The following table refers to the correspondence between the keys on the all-in-one machine and the key values in UE.

==========================    ====================================================
HMD Key                       UE input key
==========================    ====================================================
OK Key                         .. image:: _static/5.21.1.png
Home Key                       Android standard HOME (occupied by the system)
Volume Up Key                  Android standard VOLUME_UP
Volume Down Key                Android standard VOLUME_DOWN
Return key                     Android standard BACK(Note: Pico GoblinHMD does not have this button)
==========================    ====================================================