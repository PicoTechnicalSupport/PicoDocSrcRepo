.. _4 	Quick Start of SDK Access:

4 	Quick Start of SDK Access
===============================

Step1: Create a new Project
------------------------------

The blueprint and C++ project can be selected when creating new project, and the blueprint Blank project template can be taken as an example:

.. image:: _static/4.1.png

Figure 4.1 New project creating

Please be sure to ensure that the target hardware is: Mobile/Tablet, the target image level is: Scalable 3D or 2D. In addition, the project name and project path should not be in Chinese.


Step2: Set project
------------------------------

In order to be compatible with our SDK, the project should be set, including the following points: 

1、Set the project's Editor Start Map and Game Default Map: That is, keep the current map, then go to Edit->Project Setting->Project->Maps and Modes, and set the project's Editor Start Map and Game Default Map as the previously maintained map. 

.. image:: _static/4.2.png

Figure 4.2 Map setting 

2、Clear the default virtual key: Go to Engine->Input->Mobile and clear the Default Touch Interface. 

.. image:: _static/4.3.png

Figure 4.3 Game clearing default virtual key 

3、Go to Platforms->Android->APKPackaging, and check Enable FullScreen Immersive on KitKat and above devices. 

.. image:: _static/4.4.png

Figure 4.4 System hiding virtual key 

4、Set the SDK and NDK versions of the Android platform: Go to Platforms->Android and set the Minimum SDK Version and Target SDK Version as 19; 

.. image:: _static/4.5.png

Figure 4.5 SDK version setting 

5、Go to the Platforms->Android SDK, set the SDK API Level as matchndk, and set the NDK API Level as android-19. 

.. image:: _static/4.6.png

Figure 4.6 NDK version setting 

6、Set the supported CPU type and graphic interface type: Go to Platforms->Android->Build and ensure that the Support armv7 is checked. 

.. image:: _static/4.7.png

Figure 4.7 Supported CPU type setting 

7、Close the Plugins that conflict with the SDK: Go to Edit->Plugins, uncheck all items under Built-in / Virtual Reality and all items under Built-in /Input Devices. At this point, the editor will send a restart prompt, and we should only close the editor directly. 


Step3: SDK development kit import 
------------------------------

Be sure to keep the editor closed and copy the extracted Plugins directory to the root directory of the project: 

.. image:: _static/4.8.png

Figure 4.8 SDK import into the directory 

Then double click the project name and reopen it. If it is UE4.20+, it will prompt that the SDK module is not compiled, and it will be successful after "Yes" is clicked: 

.. image:: _static/4.9.png

Figure 4.9 Uncompiled prompt 

After the project is opened, our plug-in can be viewed under the Plugins page: 

.. image:: _static/4.10.png

Figure 4.10 Pico-related plug-in 


Step4: Project completion 
------------------------------

1、Create a new Pawn blueprint class, add a Scene component to its DefaultSceneRoot assembly, and then create a new Camera component under the Scene component: 

.. image:: _static/4.11.png

Figure 4.11 Pawn component structure 

After being packaged and mounted to the helmet, the relative position/ orientation of the Camera will be refreshed in real time according to the helmet, so that the head tracking and stereo rendering can be completed. 

2、Drag the Pawn into the scene and set its Auto Possess Player device as Player0: 

.. image:: _static/4.12.png

Figure 4.12 Pawn dragging into the Scene 


Step5: Project packaging 
------------------------------


The texture compression format supported by Pico Neo and Pico Goblin series is ASTC, therefore, Android (ASTC) needs to be selected when the project is packaged. The specific packaging process is: In the editor, if File -> Package Project -> Android -> Android (ASTC) is executed, the packaging can be completed (it is recommended to enter "Project Settings" first, and then check the "Package game data inside" in Android which is a sub-item of Platforms. apk? ", in order to package the data into apk):

.. image:: _static/4.13.png

Figure 4.13 Packaging process 

In addition, the SDK does not support Gradle creating currently, please be sure to uncheck Enable Gradle instead of Ant before packaging: 


.. image:: _static/4.14.png

Figure 4.14 Uncheck Enable Gradle instead of Ant 

After packaging, double click "Install_ Project name _Compile configuration-armv7-es2.bat for installation": 

.. image:: _static/4.15.png

Figure 4.15 apk Installation 